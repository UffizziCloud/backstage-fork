name: Preview (build and deploy)
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths-ignore:
      - 'microsite/**'

jobs:
  build-backstage:
    env:
      NODE_OPTIONS: --max-old-space-size=4096
      UFFIZZI_URL: https://uffizzi.com
    name: Build PR image
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || github.event.action != 'closed' }}
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: yarn install
        uses: backstage/actions/yarn-install@v0.6.3
        with:
          cache-prefix: linux-v16

      - name: Use Uffizzi's backstage app config
        run: |
          cp -f ./.github/uffizzi/uffizzi.production.app-config.yaml ./app-config.yaml

      - name: typescript build
        run: |
          yarn tsc

      - name: backstage build
        run: |
          yarn workspace example-backend build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate UUID image name
        id: uuid
        run: echo "UUID_TAG_APP=$(uuidgen)" >> $GITHUB_ENV

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: registry.uffizzi.com/${{ env.UUID_TAG_APP }}
          tags: type=raw,value=60d

      - name: Build Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: packages/backend/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
  
  deploy-uffizzi-preview:
    name: Preview on Uffizzi
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: 
      - build-backstage
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3
      - name: Render Compose File
        run: |
          BACKSTAGE_IMAGE=$(echo ${{ needs.build-backstage.outputs.tags }})
          export BACKSTAGE_IMAGE
          # Render simple template from environment variables.
          envsubst '$BACKSTAGE_IMAGE' < .github/uffizzi/docker-compose.uffizzi.yml > docker-compose.rendered.yml
          cat docker-compose.rendered.yml
      - name: Deploy preview
        id: preview
        uses: UffizziCloud/preview-action@master
        with:
          compose-file: 'docker-compose.rendered.yml'
          username: user@uffizzi.com
          server: https://temp-2022-04.uffizzicloud.com/
          project: default
          password: ${{ secrets.UFFIZZI_PASSWORD }}
      - name: Check outputs
        run: echo "${{ steps.preview.outputs.id }} at ${{ steps.preview.outputs.url }}"
      - name: Confirm Successful Preview Deployment
        uses: docker://curlimages/curl:7.82.0
        with:
          args: --retry 5 --retry-all-errors --retry-delay 0 --fail --location ${{ steps.preview.outputs.url }}

      # If PR, put image tags in the PR comments
      - name: Find comment for deployment URL
        uses: peter-evans/find-comment@v1
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Uffizzi Preview deployed
      - name: Create or update comment for deployment URL
        uses: peter-evans/create-or-update-comment@v1
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Uffizzi Preview deployed:
            ${{ steps.preview.outputs.url }}

            Uffizzi Preview ID: `${{ steps.preview.outputs.id }}`
          edit-mode: replace
